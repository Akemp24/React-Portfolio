{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asiak\\\\OneDrive\\\\Desktop\\\\Challenges\\\\React-Portfolio\\\\react-portfolio\\\\src\\\\components\\\\Contact.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/Contact.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const [errorFields, setErrorFields] = useState([]);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Check if all required fields are filled\n    if (!name || !email || !message) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    // Perform any actions you want with the form data\n    console.log('Form submitted:', {\n      name,\n      email,\n      message\n    });\n\n    // Clear form inputs and show success message\n    setName('');\n    setEmail('');\n    setMessage('');\n    setIsSubmitted(true);\n\n    // Reset the success message after a few seconds\n    setTimeout(() => {\n      setIsSubmitted(false);\n    }, 5000); // Reset after 3 seconds\n  };\n\n  // Function to handle field blur (onBlur event)\n  const handleBlur = field => {\n    if (!field.trim() && !errorFields.includes(field)) {\n      setErrorFields([...errorFields, field]);\n    } else if (errorFields.includes(field)) {\n      setErrorFields(errorFields.filter(errorField => errorField !== field));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"contact-heading\",\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: \"Message sent successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: `form-input ${errorFields.includes('name') ? 'error' : ''}`,\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        onBlur: () => handleBlur('name'),\n        required: true // Required attribute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: `form-input ${errorFields.includes('email') ? 'error' : ''}`,\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        onBlur: () => handleBlur('email'),\n        required: true // Required attribute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: `form-input ${errorFields.includes('message') ? 'error' : ''}`,\n        placeholder: \"Message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onBlur: () => handleBlur('message'),\n        required: true // Required attribute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"disclaimer-text\",\n      children: \"Please note that this contact form is currently for demonstration purposes only. Comments sent through this form will not be delivered to an email address. Actual functionality will be added soon.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"2su+UTJmm/MBA1ZS5U9FY5dpAdM=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","name","setName","email","setEmail","message","setMessage","isSubmitted","setIsSubmitted","errorFields","setErrorFields","handleSubmit","e","preventDefault","alert","console","log","setTimeout","handleBlur","field","trim","includes","filter","errorField","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onBlur","required","_c","$RefreshReg$"],"sources":["C:/Users/asiak/OneDrive/Desktop/Challenges/React-Portfolio/react-portfolio/src/components/Contact.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/Contact.css';\r\n\r\nfunction Contact() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n  const [errorFields, setErrorFields] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if all required fields are filled\r\n    if (!name || !email || !message) {\r\n      alert('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    // Perform any actions you want with the form data\r\n    console.log('Form submitted:', { name, email, message });\r\n\r\n    // Clear form inputs and show success message\r\n    setName('');\r\n    setEmail('');\r\n    setMessage('');\r\n    setIsSubmitted(true);\r\n\r\n    // Reset the success message after a few seconds\r\n    setTimeout(() => {\r\n      setIsSubmitted(false);\r\n    }, 5000); // Reset after 3 seconds\r\n  };\r\n\r\n  // Function to handle field blur (onBlur event)\r\n  const handleBlur = (field) => {\r\n    if (!field.trim() && !errorFields.includes(field)) {\r\n      setErrorFields([...errorFields, field]);\r\n    } else if (errorFields.includes(field)) {\r\n      setErrorFields(errorFields.filter((errorField) => errorField !== field));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-container\">\r\n      <h2 className=\"contact-heading\">Contact Me</h2>\r\n      {isSubmitted && (\r\n        <div className=\"success-message\">Message sent successfully!</div>\r\n      )}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className={`form-input ${errorFields.includes('name') ? 'error' : ''}`}\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          onBlur={() => handleBlur('name')}\r\n          required // Required attribute\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          className={`form-input ${errorFields.includes('email') ? 'error' : ''}`}\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          onBlur={() => handleBlur('email')}\r\n          required // Required attribute\r\n        />\r\n        <textarea\r\n          className={`form-input ${errorFields.includes('message') ? 'error' : ''}`}\r\n          placeholder=\"Message\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onBlur={() => handleBlur('message')}\r\n          required // Required attribute\r\n        ></textarea>\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <p className=\"disclaimer-text\">\r\n         Please note that this contact form is currently for demonstration purposes only. Comments sent through this form will not be delivered to an email address. Actual functionality will be added soon.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}